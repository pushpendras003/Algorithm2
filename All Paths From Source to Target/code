class Solution {
public:
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        n = size(graph);
        vector<int> path;
        dfs(graph, path, 0);
        return ans;
    }
private:
    vector<vector<int>> ans;
    int n = 0;
    
    void dfs(vector<vector<int>>& graph, vector<int>& path, int v) {
        path.push_back(v);
        if (v == n-1) {
            ans.push_back(path);
        } else {
            for (int u: graph[v])
                dfs(graph, path, u);
        }
        path.pop_back();
    }
};
